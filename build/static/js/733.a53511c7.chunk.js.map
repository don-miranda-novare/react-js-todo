{"version":3,"file":"static/js/733.a53511c7.chunk.js","mappings":"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","sources":["pages/Todo/TodoList.tsx","pages/Todo/Todo.tsx","pages/Forbidden.tsx"],"sourcesContent":["import { Box, Button, Checkbox, Typography, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\ninterface TodoItem {\n    id: string;\n    task: string;\n    completed: boolean;\n}\n\ninterface TodoListProps {\n    todos: TodoItem[];\n    onUpdate: (id: string, e: React.ChangeEvent<HTMLInputElement>) => void;\n    onDelete: (id: string) => void;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, onUpdate, onDelete }) => {\n    return (\n        <Box>\n            {todos.map((todo) => (\n                <Box\n                    key={todo.id}\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        backgroundColor: \"lightGray.main\",\n                        padding: 2,\n                        borderRadius: 1,\n                        justifyContent: \"flex-start\",\n                        alignItems: \"center\",\n                        height: \"40px\",\n                        mb: 1,\n                    }}\n                >\n                    <Checkbox\n                        checked={todo.completed}\n                        onChange={(e) => onUpdate(todo.id, e)}\n                    />\n                    <Typography variant=\"h6\" sx={{ mr: 2 }}>{todo.task}</Typography>\n                    <Tooltip title=\"Delete\" placement=\"top\" arrow>\n                        <Button\n                            onClick={() => onDelete(todo.id)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{\n                                ml: \"auto\",\n                                width: \"20px\",\n                                minWidth: \"20px\",\n                                height: 20,\n                                borderRadius: 1,\n                            }}\n                        >\n                            &#128465;\n                        </Button>\n                    </Tooltip>\n                </Box>\n            ))}\n        </Box>\n    );\n};\n\nexport default TodoList;\n","import { Box, Button, Input, Typography, Snackbar } from \"@mui/material\";\nimport TodoList from \"./TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\"\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { auth, firestoreDb } from \"../../config/firebase\";\nimport { getDocs, addDoc, collection, deleteDoc, doc, updateDoc } from \"firebase/firestore\"\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Forbidden } from \"../Forbidden\";\n\ninterface TodoFormData {\n    task: string;\n    userId: string;\n    completed: boolean;\n}\n\nexport const Todo = () => {\n    const [user] = useAuthState(auth);\n    const schema = yup.object().shape({\n        task: yup.string().required(\"Task is required\").max(50, \"Task must be at most 50 characters long\"),\n        userId: yup.string().optional().default(user?.uid || \"unknown\"),\n        completed: yup.boolean().optional().default(false),\n    });\n\n    const [taskArr, setTaskArr] = useState([] as any[]);\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n    const { register, handleSubmit, formState: { errors }, reset } = useForm<TodoFormData>({\n        resolver: yupResolver(schema),\n    });\n\n    const todosCollection = collection(firestoreDb, \"todos\");\n\n    const getTodoList = async () => {\n        const querySnapshot = await getDocs(todosCollection);\n        const todos = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setTaskArr(todos as any[]);\n    };\n\n    const onAdd = async (data: TodoFormData) => {\n        const newTask = {\n            task: data.task,\n            userId: user?.uid || \"unknown\",\n            completed: false,\n        };\n        await addDoc(todosCollection, newTask);\n\n        // clear the form\n        reset();\n\n        // refetch the todo list\n        getTodoList();\n    };\n\n    const onDelete = async (id: string) => {\n        // Delete the task from taskArr based on its id\n        setTaskArr((prevTasks) => prevTasks.filter((t) => t.id !== id));\n        // Delete the task from Firestore\n        await deleteDoc(doc(todosCollection, id)).then(() => {\n            setSnackbarMessage(`Task deleted: ${id}`);\n            setSnackbarOpen(true);\n        }).catch((error) => {\n            console.error(\"Error deleting task:\", error);\n        });\n    };\n\n    const onUpdate = async (id: string, e: React.ChangeEvent<HTMLInputElement>) => {\n        // Update the task in taskArr based on its id\n        setTaskArr((prevTasks) =>\n            prevTasks.map((t) =>\n                t.id === id ? { ...t, completed: !t.completed } : t\n            )\n        );\n        // Update the task in Firestore\n        await updateDoc(doc(todosCollection, id), {\n            completed: e.target.checked\n        }).then(() => {\n            setSnackbarMessage(`Task updated: ${id}`);\n            setSnackbarOpen(true);\n        }).catch((error) => {\n            console.error(\"Error updating task:\", error);\n        });\n    };\n\n    useEffect(() => {\n        getTodoList();\n    }, []);\n\n    if (!user) {\n        return <Forbidden />;\n    }\n\n    return (\n        <Box>\n            <Typography variant=\"h4\">Todo</Typography>\n            <form onSubmit={handleSubmit(onAdd)}>\n                <Box sx={{ width: \"500px\", display: \"flex\", flexDirection: \"row\", gap: 2, alignContent: \"center\", alignItems: \"center\" }}>\n                    <Input\n                        {...register(\"task\")}\n                        placeholder=\"Add a new task\"\n                        fullWidth\n                        sx={{ marginBottom: 2 }}\n                        inputProps={{ style: { fontSize: \"1.25rem\" } }}\n                    />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ height: 25, width: 90, borderRadius: 1 }}>Add</Button>\n                </Box>\n                {errors.task && (\n                    <Typography variant=\"h6\" color=\"error\" sx={{ mt: -2, mb: 2 }}>{errors.task.message}</Typography>\n                )}\n            </form>\n\n            <Box>\n                <TodoList todos={taskArr} onUpdate={onUpdate} onDelete={onDelete} />\n            </Box>\n\n            <Snackbar\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={() => setSnackbarOpen(false)}\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                message={snackbarMessage}\n            />\n        </Box >\n    );\n}\n\nexport default Todo;","import { Button, Typography } from \"@mui/material\";\r\n\r\nexport const Forbidden = () => {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">You do not have permission to access this page.</Typography>\r\n            <Button variant=\"contained\" onClick={() => window.location.href = \"/\"}>Back to Home</Button>\r\n        </div>\r\n    );\r\n};"],"names":["_ref","todos","onUpdate","onDelete","_jsx","Box","children","map","todo","_jsxs","sx","display","flexDirection","backgroundColor","padding","borderRadius","justifyContent","alignItems","height","mb","Checkbox","checked","completed","onChange","e","id","Typography","variant","mr","task","Tooltip","title","placement","arrow","Button","onClick","color","ml","width","minWidth","Todo","user","useAuthState","auth","schema","yup","shape","required","max","userId","optional","default","uid","taskArr","setTaskArr","useState","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","register","handleSubmit","formState","errors","reset","useForm","resolver","yupResolver","todosCollection","collection","firestoreDb","getTodoList","async","getDocs","docs","doc","data","useEffect","onSubmit","newTask","addDoc","gap","alignContent","Input","placeholder","fullWidth","marginBottom","inputProps","style","fontSize","type","mt","message","TodoList","prevTasks","t","updateDoc","target","then","catch","error","console","filter","deleteDoc","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Forbidden","window","location","href"],"sourceRoot":""}